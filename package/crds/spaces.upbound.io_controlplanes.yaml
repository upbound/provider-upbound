---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: controlplanes.spaces.upbound.io
spec:
  group: spaces.upbound.io
  names:
    categories:
    - spaces
    kind: ControlPlane
    listKind: ControlPlaneList
    plural: controlplanes
    shortNames:
    - ctp
    - ctps
    singular: controlplane
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.crossplane.version
      name: Crossplane
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: Ready
      type: string
    - jsonPath: .status.message
      name: Message
      type: string
    - jsonPath: .spec.class
      name: Class
      priority: 1
      type: string
    - jsonPath: .status.size.resourceUsage.cpu
      name: CPU Usage
      priority: 1
      type: string
    - jsonPath: .status.size.resourceUsage.memory
      name: Memory Usage
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ControlPlane defines a managed Crossplane instance.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ControlPlaneSpec defines the desired state of ControlPlane.
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: A ControlPlaneParameters represents the desired state
                  of the ControlPlaneSpec.
                properties:
                  class:
                    default: default
                    description: |-
                      [[GATE:EnableControlPlaneClasses]]
                      Class specifies the class of the control plane. This affects the
                      control plane sizing, including component replicas and resource
                      requirements. There are multiple predefined classes, with "default"
                      being the standard Spaces control plane without any additional class
                      configuration. Check the Upbound Cloud documentation for a list of all
                      available classes. Defaults to "default".
                    type: string
                    x-kubernetes-validations:
                    - message: class is immutable
                      rule: self == oldSelf
                  crossplane:
                    description: Crossplane defines the configuration for Crossplane.
                    properties:
                      autoUpgrade:
                        default:
                          channel: Stable
                        description: AutoUpgrades defines the auto upgrade configuration
                          for Crossplane.
                        properties:
                          channel:
                            default: Stable
                            description: |-
                              Channel defines the upgrade channels for Crossplane. We support the following channels where 'Stable' is the
                              default:
                              - None: disables auto-upgrades and keeps the control plane at its current version of Crossplane.
                              - Patch: automatically upgrades the control plane to the latest supported patch version when it
                                becomes available while keeping the minor version the same.
                              - Stable: automatically upgrades the control plane to the latest supported patch release on minor
                                version N-1, where N is the latest supported minor version.
                              - Rapid: automatically upgrades the cluster to the latest supported patch release on the latest
                                supported minor version.
                            enum:
                            - None
                            - Patch
                            - Stable
                            - Rapid
                            type: string
                        type: object
                      state:
                        default: Running
                        description: |-
                          State defines the state for crossplane and provider workloads. We support
                          the following states where 'Running' is the default:
                          - Running: Starts/Scales up all crossplane and provider workloads in the ControlPlane
                          - Paused: Pauses/Scales down all crossplane and provider workloads in the ControlPlane
                        enum:
                        - Running
                        - Paused
                        type: string
                      version:
                        description: Version is the version of Universal Crossplane
                          to install.
                        type: string
                        x-kubernetes-validations:
                        - message: The version must not start with a leading 'v'
                          rule: (self.matches('^[^v].*'))
                    type: object
                  groupName:
                    description: |-
                      ControlPlaneGroupName is the name of the ControlPlaneGroup you'd like to fetch Kubeconfig of.
                      Either ControlPlaneGroupName, ControlPlaneGroupRef or ControlPlaneGroupSelector has to be given.
                    type: string
                  groupNameRef:
                    description: |-
                      Reference to a ControlPlaneGroup to populate controlPlaneName.
                      Either ControlPlaneGroupName, ControlPlaneGroupRef or ControlPlaneGroupSelector has to be given.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  groupNameSelector:
                    description: |-
                      Selector for a ControlPlane to populate controlPlaneName.
                      Either ControlPlaneGroupName, ControlPlaneGroupRef or ControlPlaneGroupSelector has to be given.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  restore:
                    description: |-
                      [[GATE:EnableSharedBackup]] THIS IS AN ALPHA FIELD. Do not use it in production.
                      Restore specifies details about the control planes restore configuration.
                    properties:
                      finishedAt:
                        description: |-
                          FinishedAt is the time at which the control plane was restored, it's not
                          meant to be set by the user, but rather by the system when the control
                          plane is restored.
                        format: date-time
                        type: string
                      source:
                        description: |-
                          Source of the Backup or BackupSchedule to restore from.
                          Require "restore" permission on the referenced Backup or BackupSchedule.
                          ApiGroup is optional and defaults to "spaces.upbound.io".
                          Kind is required, and the only supported kinds are Backup and
                          BackupSchedule at the moment.
                          Name is required.
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced.
                            minLength: 1
                            type: string
                          name:
                            description: Name is the name of resource being referenced.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                        x-kubernetes-validations:
                        - message: source must be a reference to a Backup or BackupSchedule
                            (v1alpha1)
                          rule: (!has(self.apiGroup) || self.apiGroup == 'spaces.upbound.io')
                            && (self.kind == 'Backup' || self.kind == 'BackupSchedule')
                        - message: source is immutable
                          rule: oldSelf == self
                    required:
                    - source
                    type: object
                    x-kubernetes-validations:
                    - message: finishedAt is immutable once set
                      rule: '!has(oldSelf.finishedAt) || oldSelf.finishedAt == self.finishedAt'
                type: object
                x-kubernetes-validations:
                - message: '[[GATE:EnableSharedBackup]] restore source can not be
                    unset'
                  rule: '!has(oldSelf.restore) || has(self.restore)'
                - message: '[[GATE:EnableSharedBackup]] restore source can not be
                    set after creation'
                  rule: has(oldSelf.restore) || !has(self.restore)
                - message: '"version" cannot be empty when upgrade channel is "None"'
                  rule: '!has(self.crossplane.autoUpgrade) || self.crossplane.autoUpgrade.channel
                    != "None" || self.crossplane.version != ""'
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ControlPlaneStatus represents the observed state of a ControlPlane.
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              controlPlaneID:
                type: string
              firstAvailableAt:
                description: FirstAvailableAt is the time at which the control plane
                  was available for the first time.
                format: date-time
                type: string
              message:
                description: |-
                  Message is a human-readable message indicating details about why the
                  ControlPlane is in this condition.
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
              size:
                description: |-
                  [[GATE:EnableControlPlaneClasses]]
                  Size holds the status information about the control plane size,
                  including resource usage.
                properties:
                  resourceUsage:
                    description: ResourceUsage represents the resource limits and
                      consumption of the control plane.
                    properties:
                      cpu:
                        description: CPU represents the CPU resource usage.
                        type: string
                      memory:
                        description: Memory represents the memory resource usage.
                        type: string
                    type: object
                type: object
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: control plane name cannot exceed 63 characters
          rule: self.metadata.name.size() <= 63
    served: true
    storage: true
    subresources:
      status: {}
